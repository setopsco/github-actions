name: "Build and push image to SetOps registry"
description: "Builds the Docker images and pushes it to the SetOps registry while creating a tag for each stage / app combination"

inputs:
  setops-organization:
    description: The SetOps organization
    required: true
  setops-project:
    description: The SetOps project name
    required: true
  setops-username:
    description: The SetOps username, usually passed in from a Github Actions secret
    required: true
  setops-password:
    description: The SetOps password, usually passed in from a Github Actions secret
    required: true
  setops-stages:
    description: The SetOps stages to publish to, space separated, e.g. "stage1 stage2 stage3"
    required: true
  setops-apps:
    description: The SetOps apps to build and deploy, space separated, e.g. "app1 app2 app3"
    required: true
  build-context:
    description: The build context / directory where the Dockerfile is located, defaults to '.'
    required: false
    default: .
  build-cache-key-prefix:
    description: The cache key used by docker buildx. The complete cache key is concatenated
    required: false
    default: app
  build-args:
    description: Docker build args
    required: false
  build-secrets:
    description: Docker build secrets
    required: false

outputs:
  image-digest:
    value: ${{ steps.build_app.outputs.digest }}
    description: The digest of the image that can be referred to when creating releases

runs:
  using: "composite"
  steps:
    - name: "Detect SetOps target tag_names"
      id: build_tag_names
      run: |
        declare -a tag_names
        for stage in ${{ inputs.setops-stages }}; do
          for app in ${{ inputs.setops-apps }}; do
            tag_names+=("api.setops.co/${{ inputs.setops-organization }}/${{ inputs.setops-project }}/$stage/$app:latest")
          done
        done

        # https://stackoverflow.com/a/2317171
        concatenated_tag_names=$(printf ",%s" "${tag_names[@]}")
        concatenated_tag_names=${concatenated_tag_names:1}

        echo "::set-output name=concatenated_tag_names::$concatenated_tag_names"
      shell: bash
    # https://github.com/actions/cache#creating-a-cache-key
    # http://man7.org/linux/man-pages/man1/date.1.html
    - name: Get Date
      id: get_date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      shell: bash
    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ steps.get_date.outputs.date }}-${{ inputs.build-cache-key-prefix }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ steps.get_date.outputs.date }}-${{ inputs.build-cache-key-prefix }}-
    - name: "Install SetOps CLI"
      uses: setopsco/setup-setops@v3
      with:
        setops_organization: ${{ inputs.setops-organization }}
        setops_username: ${{ inputs.setops-username }}
        setops_password: ${{ inputs.setops-password }}
    - name: "Login to SetOps registry"
      run: |
        LOGIN_COMMAND=$(setops registry:login | grep printf)
        eval $LOGIN_COMMAND
      shell: bash
    - name: Build and push app
      id: build_app
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.build-context }}
        push: true
        tags: ${{ steps.build_tag_names.outputs.concatenated_tag_names }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        build-args: ${{ inputs.build-args }}
        secrets: ${{ inputs.build-secrets }}
    # Temp fix
    # https://github.com/docker/build-push-action/issues/252
    # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      shell: bash
